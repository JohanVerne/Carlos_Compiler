LET: let at [1, 0]
IDENTIFIER: x at [1, 4]
EQUAL: = at [1, 6]
NO: no at [1, 8]
INT: int at [1, 11]
SEMICOLON: ; at [1, 14]
LET: let at [2, 0]
IDENTIFIER: y at [2, 4]
EQUAL: = at [2, 6]
IDENTIFIER: x at [2, 8]
DOUBLE_QUESTION_MARK: ?? at [2, 10]
FLOAT_LITERAL: 2 at [2, 13]
SEMICOLON: ; at [2, 14]
STRUCT: struct at [3, 0]
IDENTIFIER: S at [3, 7]
LBRACE: { at [3, 9]
IDENTIFIER: x at [3, 10]
COLON: : at [3, 11]
INT: int at [3, 13]
RBRACE: } at [3, 16]
LET: let at [4, 0]
IDENTIFIER: z at [4, 4]
EQUAL: = at [4, 6]
SOME: some at [4, 8]
IDENTIFIER: S at [4, 13]
LPAREN: ( at [4, 14]
FLOAT_LITERAL: 1 at [4, 15]
RPAREN: ) at [4, 16]
SEMICOLON: ; at [4, 17]
LET: let at [5, 0]
IDENTIFIER: w at [5, 4]
EQUAL: = at [5, 6]
IDENTIFIER: z at [5, 8]
OPTIONAL_MEMBER: ?. at [5, 9]
IDENTIFIER: x at [5, 11]
SEMICOLON: ; at [5, 12]
PRINT: print at [6, 0]
LPAREN: ( at [6, 5]
IDENTIFIER: w at [6, 6]
RPAREN: ) at [6, 7]
SEMICOLON: ; at [6, 8]
