LET: let at [1, 0]
IDENTIFIER: a at [1, 4]
EQUAL: = at [1, 6]
FLOAT_LITERAL: 1024 at [1, 8]
SEMICOLON: ; at [1, 12]
FUNCTION: function at [2, 0]
IDENTIFIER: f at [2, 9]
LPAREN: ( at [2, 10]
RPAREN: ) at [2, 11]
LBRACE: { at [2, 13]
CONST: const at [3, 2]
IDENTIFIER: b at [3, 8]
EQUAL: = at [3, 10]
TRUE: true at [3, 12]
SEMICOLON: ; at [3, 16]
RBRACE: } at [4, 0]
FUNCTION: function at [5, 0]
IDENTIFIER: g at [5, 9]
LPAREN: ( at [5, 10]
RPAREN: ) at [5, 11]
COLON: : at [5, 12]
STRING: string at [5, 14]
LBRACE: { at [5, 21]
LET: let at [6, 2]
IDENTIFIER: b at [6, 6]
EQUAL: = at [6, 8]
STRING_LITERAL: "hi" at [6, 10]
PLUS: + at [6, 15]
STRING_LITERAL: "ho" at [6, 17]
SEMICOLON: ; at [6, 21]
RETURN: return at [7, 2]
IDENTIFIER: b at [7, 9]
SEMICOLON: ; at [7, 10]
RBRACE: } at [8, 0]
PRINT: print at [9, 0]
LPAREN: ( at [9, 5]
IDENTIFIER: a at [9, 6]
PLUS: + at [9, 8]
IDENTIFIER: a at [9, 10]
RPAREN: ) at [9, 11]
SEMICOLON: ; at [9, 12]
EOF:  at [10, 0]
