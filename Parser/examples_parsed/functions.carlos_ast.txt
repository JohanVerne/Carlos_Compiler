Program:
  FunDecl: f
    Parameters:
      Param: a : {'type': 'primitive', 'name': 'int'}
    Return Type: {'type': 'primitive', 'name': 'int'}
    Body:
      Block:
        Call: return
          Arguments:
            BinaryOp (PLUS):
              Left:
                Identifier: a
              Right:
                Literal: 3
  FunDecl: g
    Parameters:
      Param: a : {'type': 'primitive', 'name': 'int'}
    Return Type: {'type': 'primitive', 'name': 'int'}
    Body:
      Block:
        Call: return
          Arguments:
            BinaryOp (MULTIPLICATION):
              Left:
                Identifier: a
              Right:
                Literal: 2
  Call: print
    Arguments:
      Call:
        Callee:
          Identifier: g
        Arguments:
          Call:
            Callee:
              Identifier: f
            Arguments:
              Literal: 3
